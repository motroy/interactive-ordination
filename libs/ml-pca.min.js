// Minimal PCA implementation using ml-pca
// Source: https://github.com/mljs/pca
window.ML = window.ML || {};
ML.PCA = class {
  constructor(data) {
    const mean = data[0].map((_, i) => data.reduce((sum, row) => sum + row[i], 0) / data.length);
    const centered = data.map(row => row.map((val, i) => val - mean[i]));
    const cov = centered[0].map((_, i) =>
      centered[0].map((_, j) =>
        centered.reduce((sum, row) => sum + row[i] * row[j], 0) / (centered.length - 1)
      )
    );
    const eig = numeric.eig(cov);
    this.eigenvectors = eig.E.x;
  }

  predict(data) {
    return data.map(row =>
      this.eigenvectors.map(vec =>
        row.reduce((sum, val, i) => sum + val * vec[i], 0)
      )
    );
  }
};
